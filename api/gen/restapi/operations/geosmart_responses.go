// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"geo-smart/api/gen/models"
)

// GeosmartOKCode is the HTTP code returned for type GeosmartOK
const GeosmartOKCode int = 200

/*GeosmartOK Geocode Response

swagger:response geosmartOK
*/
type GeosmartOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeoSmartResponse `json:"body,omitempty"`
}

// NewGeosmartOK creates GeosmartOK with default headers values
func NewGeosmartOK() *GeosmartOK {

	return &GeosmartOK{}
}

// WithPayload adds the payload to the geosmart o k response
func (o *GeosmartOK) WithPayload(payload *models.GeoSmartResponse) *GeosmartOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geosmart o k response
func (o *GeosmartOK) SetPayload(payload *models.GeoSmartResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeosmartOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GeosmartInternalServerErrorCode is the HTTP code returned for type GeosmartInternalServerError
const GeosmartInternalServerErrorCode int = 500

/*GeosmartInternalServerError Error

swagger:response geosmartInternalServerError
*/
type GeosmartInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GeoSmartResponse `json:"body,omitempty"`
}

// NewGeosmartInternalServerError creates GeosmartInternalServerError with default headers values
func NewGeosmartInternalServerError() *GeosmartInternalServerError {

	return &GeosmartInternalServerError{}
}

// WithPayload adds the payload to the geosmart internal server error response
func (o *GeosmartInternalServerError) WithPayload(payload *models.GeoSmartResponse) *GeosmartInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geosmart internal server error response
func (o *GeosmartInternalServerError) SetPayload(payload *models.GeoSmartResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeosmartInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GeosmartDefault Error

swagger:response geosmartDefault
*/
type GeosmartDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeoSmartResponse `json:"body,omitempty"`
}

// NewGeosmartDefault creates GeosmartDefault with default headers values
func NewGeosmartDefault(code int) *GeosmartDefault {
	if code <= 0 {
		code = 500
	}

	return &GeosmartDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the geosmart default response
func (o *GeosmartDefault) WithStatusCode(code int) *GeosmartDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the geosmart default response
func (o *GeosmartDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the geosmart default response
func (o *GeosmartDefault) WithPayload(payload *models.GeoSmartResponse) *GeosmartDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geosmart default response
func (o *GeosmartDefault) SetPayload(payload *models.GeoSmartResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeosmartDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
