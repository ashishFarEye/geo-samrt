// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// CompareOKCode is the HTTP code returned for type CompareOK
const CompareOKCode int = 200

/*CompareOK Response

swagger:response compareOK
*/
type CompareOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCompareOK creates CompareOK with default headers values
func NewCompareOK() *CompareOK {

	return &CompareOK{}
}

// WithPayload adds the payload to the compare o k response
func (o *CompareOK) WithPayload(payload string) *CompareOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the compare o k response
func (o *CompareOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CompareOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*CompareDefault Error

swagger:response compareDefault
*/
type CompareDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCompareDefault creates CompareDefault with default headers values
func NewCompareDefault(code int) *CompareDefault {
	if code <= 0 {
		code = 500
	}

	return &CompareDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the compare default response
func (o *CompareDefault) WithStatusCode(code int) *CompareDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the compare default response
func (o *CompareDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the compare default response
func (o *CompareDefault) WithPayload(payload string) *CompareDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the compare default response
func (o *CompareDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CompareDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
