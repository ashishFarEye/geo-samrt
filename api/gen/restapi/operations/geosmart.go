// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GeosmartHandlerFunc turns a function with the right signature into a geosmart handler
type GeosmartHandlerFunc func(GeosmartParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GeosmartHandlerFunc) Handle(params GeosmartParams) middleware.Responder {
	return fn(params)
}

// GeosmartHandler interface for that can handle valid geosmart params
type GeosmartHandler interface {
	Handle(GeosmartParams) middleware.Responder
}

// NewGeosmart creates a new http.Handler for the geosmart operation
func NewGeosmart(ctx *middleware.Context, handler GeosmartHandler) *Geosmart {
	return &Geosmart{Context: ctx, Handler: handler}
}

/* Geosmart swagger:route POST /geosmart geosmart

Geosmart

*/
type Geosmart struct {
	Context *middleware.Context
	Handler GeosmartHandler
}

func (o *Geosmart) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGeosmartParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
